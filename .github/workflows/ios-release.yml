name: Build and Distribute

on:
  push:
    branches:
      - main

jobs:
  build:
    name: build
    runs-on: macos-14

    steps:
      - uses: actions/checkout@v2

      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '3.27.3'
    
      - name: Setup Flutter Environment
        run: |
          flutter clean
          flutter pub get 
      
      # 清除 Xcode 缓存
      - name: Clean Xcode Cache
        run: |
          rm -rf ~/Library/Developer/Xcode/DerivedData
          rm -rf ~/Library/Developer/Xcode/iOS\ DeviceSupport
          rm -rf ~/Library/Developer/Xcode/Archives
          rm -rf ~/Library/Developer/Xcode/Products
          
      # 添加 Xcode 版本选择
      - name: Select Xcode 16.2
        run: sudo xcode-select -s /Applications/Xcode_16.2.app
        
      # 设置 CocoaPods
      # - name: Setup CocoaPods
      #   run: |
      #     cd ios
      #     rm -rf Pods
      #     rm -f Podfile.lock
      #     pod install --repo-update
          
      # 添加详细的环境信息调试步骤
      - name: Print Environment Info
        run: |
          echo "============= Environment Variables ============="
          echo "GITHUB_WORKSPACE: $GITHUB_WORKSPACE"
          FLUTTER_ROOT=$(which flutter | xargs dirname | xargs dirname)
          echo "FLUTTER_ROOT: $FLUTTER_ROOT"
          echo "FLUTTER_APPLICATION_PATH: $GITHUB_WORKSPACE"
          echo "Current Directory: $(pwd)"


      - uses: cedvdb/action-flutter-build-ios@v1
        with:
          build-cmd: |
            flutter build ipa --release --export-options-plist=ios/ExportOptions.plist --no-tree-shake-icons
          certificate-base64: MIIMewIBAzCCDEIGCSqGSIb3DQEHAaCCDDMEggwvMIIMKzCCBscGCSqGSIb3DQEHBqCCBrgwgga0AgEAMIIGrQYJKoZIhvcNAQcBMBwGCiqGSIb3DQEMAQYwDgQIbgMj6118hWECAggAgIIGgLFsS7Ti+0b39s1Btn99EAvqXuF9cg4k4CBNLhwsuh1UTuB8hrceqiT0/Obfdf/0Lx55nYo8FBZnb/Mcd53SRjfVmM4mNnpBBoHJXXusBSqHQesofcVAoRa7reqreUK26fO0RRgJsTKkmpow5puis2/2/iHpMRLi0FMCX+EqFDxdshD5gLdBZm/U1YOKIGGNxuV/K2AVHnw8r7okooV/m+7nILlWpZhRiXrfdBGyRp/sFQ+w5+eBNXKHaC8QJa5q5RHOIkCZvpPk2w8KA/kaAuk9sbAN0RKHKdbbquLyDDD+otUvMofoweeUD6BgyWk/vOMuRukH+MP9wYANXyh8okK3PAduigtga6a5p7xJ9ICymZkaPEr6bXT96u7DC9CViBH0W2FCFLD/BSUTKKB1rveZ6XmvZwgkf4bnXWoCcEeJLO2bBBOa14wKkexf9d0oP3hAW+TAyzuSfGexfByvm5E03el1JnVbsWZinP5ERszNn7MKV2Cl1d1/yziDtKFuTtt7/cTIOPPrRuhM4Ca3peCoNLcdkaj3MZ7jaNviYKsiDU1SIAByUxazDA2hT4u4x9P2oDw9vg5f4BuPcBJD2gz/lLLlnmD07ffBjqWs1iCrhGmjKKL1+vWaGOW3xu/D41D67T2s+aG1zyNvOCalBYQS6pg2D4zdFiTGh1RqkffzAFBk5eeuIAl6XBxNauAgfPivrrA62sJ3o66QKYMRAch8w0CPrxpjMpFf204CYW++u6hsJmWuuXYPA89o9F0aKYdBGhhO5PuTITuQd3BmdV4twzK6QvzYEL9oFHayH1vdma/2wa51eEWNCqzijcPQOJL6cvzl2lhuPWLX3Ks9o76sluqACt2CG6WoQns/wAfIHTHgO/8a68Bzm5Atd3l9ORaxB2oSAKzOttzzq2WQheOPHD55yhhG1S3OCBuhhp/8kg9i8bTdgWIZCz05B+kjtNo1X5FBJBA6ADQSu9mg2V7YIlQL9zvSlS4Sh1Y04ZFIyNcrleU0baTeTXgj/jjh5uw2ujLksKpE4w6OsUDKhtuS1VJPDUlZo2wLQ1ziNndZ7XjvTUGBGvjGOzxzDhfV4D5Wt3uu/CpjRgN+QNK3KmJjqXfjJPYyOxPNLBZu6McUCKEFDMTx9M0zcK+JeupvmKbvH+jPpi9J31mj1eTGPlpL/qGvL7rhL46RFtHGor1UPY41/HKIh6svaFXJH3YllMLPcaGLp3Qj9yqyFLiyuUzA07rsGNtqRfQJuzczjIqX82O/wtEDTfUxH+fNSsdo8Yn8bKt5TLiafZhsSTOsMFimpztXKkX9C1D9VSULWNSy6lgEdVR8R6HWk6S8Ft6oAZX7l1+X79OeM9iHuO0vXg1V+QZ0UT9xFvoASJoilpDHJdlu68WhzHBHNMEGnHkBhOsgNDrQHz1X3IVtUPXTbhykb9iVZqCjAvTqxgFG601UbivUDaRwlcWJPYAZ5IcRqWbMEDZuqZslTjpn/G4kjV/mm8usDW8Kn91BfKgewS0RyOPuY4er5/lScihrLeUPiFv+p3p9qF1D8L2+vwh5sWm18SxRHcgoK4vvQUgN31rS/YMKeEzs4ixz2U+CQtkwX6VY6D3ptb/vDlp3Eg3ns0hD9OREYTZMnQeWQy5uEWTrTjEIqZxM2fvNNLVA0bHdgp+iZU0BiDP2iLX4ZEORiLjA7+Y7iFPrZKj34Xb6WrQT/0yB3zFWEWPgz6mB0SNtRPDU/jXtXoeI1Zgd6ExauJpFxmpkM5j5Veo1pw3S0RgbH6JRQjlu3J4Sn/ZILj4u4VTNrxgBMflKLDDv0IMzC2Vu2k/LZVUFHUOKz9cMDxHpXb1HjBBGIdAN388rpjr0XFCGQbR5IfPW4+69cSAq+rM3JjvxfJGEDnGUL8zFbBtEQho7zRkjzCR10cxzPuXRcdSXhtEOB7Z9zkHwygBppeKsudS9wzSZ5qUc48MTWxnWGegEMwgdYRVadhMhjphXiteuQwQmUKU1gntm+m/wIAH1Q69UUHdmvzwb0DGXWwaACh7lvra5PLKgitvF5xuWJQBoMZrDiDmZkEP/7Vd9UnJmc2o7IeLS45tXVUIbFyL0NId9w9l2De0/0pWT/05fYi03fShlI//GSDIdka+21KrfBjJHLFX7eZMbA7hoj2hfhXCDHN/T7VcyRSJRTmLCUoIgCxDNqwFccc1J5NhpxQJbu91W9CBBWwhOCCE4ALh2MIIFXAYJKoZIhvcNAQcBoIIFTQSCBUkwggVFMIIFQQYLKoZIhvcNAQwKAQKgggTuMIIE6jAcBgoqhkiG9w0BDAEDMA4ECPOYp10/uQKSAgIIAASCBMg91cEhWoczs0iV7AI8KqlXWQ9C51wXYEoJiIQnatCSB9t3IT/Xrlagnq6XyYkJnZNwW4irgjemtSC0LyI+7vGwy0A6AqFTnb+25waxIrcHV6MwViBxpeMhdDwfDCFyJOpwVeR0SFJ0Cv2N6ZmtvlrMj48s8uYCOH6lFlctVCrWiy3sWFCwwQzIV47TA3wg5abC6saDT7t7xfVMn7kbRzPw9PfgWdatgLjLZBA3Z77M6OQ1RVEpOOzYWSCqr8fg8c7ZCE7XMSUCbE1C0NxwdVdp/HrUomXmdpFwG/TC3fn/GfA8r4kH7ZNFkSab6T8Zd9IQZFEkjwMr/TW8TI1JS06gBJib3yeBFP7T1+0GQNGGzsH0INbuYWGxeI/baa2jjTwqyVwHpRrZuowfRySMEbxku5P49KH2D86n+kYbhANiL4HqOGhAz/uRdaBHRKdQ360VgrV8/mtQELegz1z3rNJQSsu32ruN1CxGPifdAtoc60ZAAdwyRYni496TJp53xK6XyucqVImoBeu5VfC4fWPqaPNPAJzozUW/Weo3PlOr+o4ppi0CYYkBgIknsAwkF9NHLPkugxZwYScUDiK/TCTkKRhBzeXeFRltPlcvzgDlLAEK25CIvb4kw6k/SaQtjU+3VPJV/J+6/3y0V+dJWjJ8eK6Gp9kKbSlyhKZCk2DMTagKdyLL3b8RTbhKHshgkumld+GLP2QscvPkhcZ0bhJdIs6GVZcVoQIDaYFXtfhD4pm9sMJDj3LlfMqx4CtbEK5uky5o/wgU7ZFyb3eWA+C9p5Wz5p8MS6oNSGer9CkdTgYkg97ob8LKe+EWQffYaAdDOsNuVGGUcnd6RsWQMfXIxcEB4+Xf8DhXGPxHvLOTrK4Sud7VAMrZ8RRe7ecE72llXzswNx3GDES1zsOtbp4s27O6cvJVNNAySmerBCWc6YHSN/45pVMyjVHdhxc5MgmS3vbhp0JVOkoXslTJH6LEgutVSM9LEPXVl3YHhaJimq3+XL+mtYABFQAhujBO3XL0blCIcjKwSK5ME6oQveaNPMlCztn0ehYnRKVXo9C+ojsfo6+BKlqbQ7RAkvsktoFHM5kxkJmMa5+GxZZWxjoaEBnE0/xsghONNfBhDGWPHa0tQHPKjsKAXwUfUWsDEwPrZW4zm22Ob9fJBHYLglGXkLoxocH1M1fp8TmGQjpqN1L73NJpAX9wRc20lRGv2p+pSqQb9TafvohZlfX/uFqAKLqFdtwvYHqWpBYNBmdzPJNMgcElQu2y40ZC2swUGenY8MrbKdyT8NFwfqX2MIae6pTc4nJUpYl8zzPuCRwi8vdWDYBYte1qF+cDVrjA253DSFv6CG6mwBUeznNoLmIlQg0qR7i3cBOv6A/Ib0x/7KtfhOXB9uXr5DrNrzMdAdT7GKg4NjqSuljjwCBBgl0kxi7fXSsQOVViqmfM96jJdYplviU6kLAw8Q1FGJTHnYUJ4fwCpR/nnwRqWInCsgLZsykRNyTiOK3WverhbfzQ7MkAiWcBFa0/5GACLjD/CLwh6vZSj/BMcbz1yARk0H+0r3CL4CUskMY3P9yfTPEwUsBNXUcsxkUu3oSRJZKKeFmxTpQbMdDS1GsxGvKrKYKvX6Q44JVPzisxQDAZBgkqhkiG9w0BCRQxDB4KAGEAZABtAGkAbjAjBgkqhkiG9w0BCRUxFgQUgGJkmjsiubvoQpngdWMn3NN8UHowMDAhMAkGBSsOAwIaBQAEFOwrtBLel0CnLpPTH1LAR34p06kSBAjoedlOzDtZQAIBAQ==


          certificate-password: 111111
          
          provisioning-profile-base64: 

          keychain-password: 111111

      # # 添加检查步骤
      - name: 检查构建文件
        run: |
          echo "检查 build/ios/ipa 目录内容："
          ls -la build/ios/ipa/
          echo "检查 build/ios 目录内容："
          ls -la build/ios/

      - name: Archive IPA
        uses: actions/upload-artifact@v4
        with:
          name: release-ipa
          path: build/ios/ipa


      - name: Upload to App Store using altool
        env:
          IPA_PATH: "build/ios/ipa/hawn.ipa"
          APPLE_ID: "Licezary66@outlook.com"
          APP_SPECIFIC_PASSWORD: "iuwx-wliw-gegn-nuao"
        run: |
          xcrun altool --upload-app -f "$IPA_PATH" \
            -t ios \
            -u "$APPLE_ID" \
            -p "$APP_SPECIFIC_PASSWORD" \
            --verbose
